{
  "swagger": "2.0",
  "info": {
    "title": "Birthday API",
    "description": "This is an API to store friends birthday's information like birthdate, gift idea, favorite snack, etc",
    "version": "1.0.0"
  },
  "host": ["upcoming-birthdays.herokuapp.com"],
  "basePath": "/",
  "schemes": ["https"],
  "paths": {
    "/friends/": {
      "get": {
        "description": "Gets all friends from the API",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Creates a new friend in the API",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Kevin"
                },
                "lastName": {
                  "example": "Castro"
                },
                "birthdayDate": {
                  "example": "March 23"
                },
                "giftIdea": {
                  "example": "Month rent"
                },
                "favoriteSnack": {
                  "example": "Chips"
                },
                "throwParty": {
                  "example": true
                },
                "spotlight": {
                  "example": true
                },
                "descriptionOfDreamDay": {
                  "example": "Having chilaquiles for breakfast, 2 burgers and a pizza for lunch, going to a lake on the afternoon and playing soccer at night"
                },
                "avatarPicture": {
                  "example": "kevin.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/friends/{id}": {
      "get": {
        "description": "Gets a specific friend by Id from the API",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Updates a specific friend by Id from the API",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "Kevin"
                },
                "lastName": {
                  "example": "Castro"
                },
                "birthdayDate": {
                  "example": "March 23"
                },
                "giftIdea": {
                  "example": "Semester rent"
                },
                "favoriteSnack": {
                  "example": "Chips"
                },
                "throwParty": {
                  "example": true
                },
                "spotlight": {
                  "example": true
                },
                "descriptionOfDreamDay": {
                  "example": "Having chilaquiles for breakfast, 2 burgers and a pizza for lunch, going to a lake on the afternoon and playing soccer at night"
                },
                "avatarPicture": {
                  "example": "kevin.jpg"
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Deletes a specific friend by Id from the API",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/": {
      "get": {
        "description": "Gets all the users from the API",
        "produces": ["application/json"],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Creates a new user in the API",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "kevin@kevin.com"
                },
                "password": {
                  "example": "supersecretpassword"
                },
                "isAdmin": {
                  "example": true
                },
                "friends": {
                  "example": [1, 2, 3]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Gets a specific user from the API",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "412": {
            "description": "Precondition Failed"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "Updates a specific user by Id from the API",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "userName": {
                  "example": "kevin@kevin.com"
                },
                "password": {
                  "example": "supersecretpassword"
                },
                "isAdmin": {
                  "example": true
                },
                "friends": {
                  "example": [1, 2, 3]
                }
              }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "Deletes a specific user from the API",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}
